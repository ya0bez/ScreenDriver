
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

 Перем ДанныеОшибки;

#КонецОбласти

#Область ПрограммныйИнтерфейсОбязательныеМетоды

// Описание обязательных методов драйвера на Английском

Функция GetInterfaceRevision() Экспорт
	
	Возврат ПолучитьРевизиюИнтерфейса();	

КонецФункции

Функция GetDescription(ОписаниеДрайвера) Экспорт

	Возврат ПолучитьОписание(ОписаниеДрайвера);

КонецФункции

Функция GetLastError(ОписаниеОшибки) Экспорт

	Возврат ПолучитьОшибку(ОписаниеОшибки);

КонецФункции

Функция GetParameters(СписокПараметров) Экспорт
	
	Возврат ПолучитьПараметры(СписокПараметров);
	
КонецФункции

Функция SetParameter(Знач ИмяПараметра,Знач ЗначениеПараметра) Экспорт

	Возврат УстановитьПараметр(ИмяПараметра,ЗначениеПараметра); 	

КонецФункции

Функция Open(ИДУстройства) Экспорт
	
	Возврат Подключить(ИДУстройства);
	
КонецФункции

Функция Close(Знач ИДУстройства) Экспорт
	
	Возврат Отключить(ИДУстройства);
	
КонецФункции

Функция DeviceTest(АктивированДемоРежим = Ложь) Экспорт
	
	Возврат ТестУстройства(АктивированДемоРежим);
	
КонецФункции

Функция GetAdditionalActions(СписокДействий) Экспорт
	
	Возврат ПолучитьДополнительныеДействия(СписокДействий);
	
КонецФункции

Функция DoAdditionalAction(Знач ИмяДействия) Экспорт
	
	Возврат ВыполнитьДополнительноеДействие(ИмяДействия);
	
КонецФункции

// Описание обязательных методов драйвера на Английском

Функция ПолучитьРевизиюИнтерфейса() Экспорт

	Возврат 3007;

КонецФункции

Функция ПолучитьОписание(ОписаниеДрайвера) Экспорт

	Операция = "Получение описание драйвера";

	ОписаниеДрайвера= Новый Структура;
	ОписаниеДрайвера.Вставить("Name",							"Драйвер экрана покупателя");
	ОписаниеДрайвера.Вставить("Description",					"Программная компонента взаимодействия с рекламным процессингом ЛОТРЗ");
	ОписаниеДрайвера.Вставить("EquipmentType",					"ДисплейПокупателя");
	ОписаниеДрайвера.Вставить("IntegrationComponent",			Ложь);
	ОписаниеДрайвера.Вставить("MainDriverInstalled",			Истина);
	ОписаниеДрайвера.Вставить("DriverVersion",					"1.1.1 от 14.07.2022");
	ОписаниеДрайвера.Вставить("IntegrationComponentVersion",	"1.1.1 от 14.07.2022");
	ОписаниеДрайвера.Вставить("DownloadURL",					"");
	ОписаниеДрайвера.Вставить("LogIsEnabled",					Ложь);
	ОписаниеДрайвера.Вставить("LogPath",						"");
	
	Попытка
		ОписаниеДрайвера = ОбщегоНазначения.ЗначениеВСтрокуXML(ОписаниеДрайвера);
	Исключение
		УстановитьОшибку(Операция,Строка(ОписаниеОшибки()),Истина);
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;

КонецФункции

Функция ПолучитьОшибку(ОписаниеОшибки) Экспорт

	ОписаниеОшибки = ДанныеОшибки.Описание;
	Возврат ДанныеОшибки.Код;

КонецФункции

Функция ПолучитьПараметры(СписокПараметров) Экспорт
	
	Операция = "Получение параметров драйвера";
	
	Попытка
		СписокПараметров = ЭтотОбъект.ПолучитьМакет("ПараметрыДрайвера").ПолучитьТекст();
	Исключение
		УстановитьОшибку(Операция,Строка(ОписаниеОшибки()),Истина);
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;		
	
КонецФункции

Функция УстановитьПараметр(Знач ИмяПараметра,Знач ЗначениеПараметра) Экспорт
	
	Операция = "Установка параметра";
	
	Если НЕ ТипЗнч(ПараметрыДрайвера) = Тип("Структура") Тогда
		ПараметрыДрайвера = Новый Структура;
	КонецЕсли;
	
	Попытка
		ПараметрыДрайвера.Вставить(Строка(Имяпараметра),ЗначениеПараметра);
	Исключение
		ПараметрыДрайвера = Неопределено;
		УстановитьОшибку(Операция,Строка(ОписаниеОшибки()),Истина);
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;			
		
КонецФункции

Функция Подключить(ИДУстройства) Экспорт
	
	Операция = "Подключение устройства";
	
	ИДУстройства = "KYB_BuyerScreen_" + Строка(Новый УникальныйИдентификатор());
	
	Возврат Истина;
	
КонецФункции

Функция Отключить(Знач ИДУстройства) Экспорт
	
	Операция = "Отключение устройства";	
	
	Возврат Истина;
	
КонецФункции

Функция ТестУстройства(АктивированДемоРежим = Ложь) Экспорт
	
	Операция = "Тест устройства";	
	
	Возврат Истина;
	
КонецФункции

Функция ПолучитьДополнительныеДействия(СписокДействий) Экспорт
	
	Операция = "Получить список дополнительных действий";
	
	Попытка
		СписокДействий = ЭтотОбъект.ПолучитьМакет("ДополнительныеДействия").ПолучитьТекст();	
	Исключение
		УстановитьОшибку(Операция,Строка(ОписаниеОшибки()),Истина);
		Возврат Ложь;
	КонецПопытки;
			
	Возврат Истина;
	
КонецФункции

Функция ВыполнитьДополнительноеДействие(Знач ИмяДействия) Экспорт
	
	Операция = "Выполнение дополнительного действия";
	
	Если НЕ ТипЗнч(ИмяДействия) = Тип("Строка")
	ИЛИ ПустаяСтрока(ИмяДействия) Тогда
		УстановитьОшибку(Операция,"Отсутствует идентификатор дополнительного действия",Истина);
		Возврат Ложь;
	КонецЕсли;
		
	УстановитьОшибку(Операция,"Дополнительное действие + '" + ИмяДействия + "' не определено драйвером",Истина);
	Возврат Ложь

	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область ПрограммныйИнтерфейсДисплейПокупателя

Функция ВывестиСтрокуНаДисплейПокупателя(Знач СтрокаВывода) Экспорт
	
	Операция = "Вывод информации на экран покупателя";
	
	Возврат Истина;
	
КонецФункции

Функция ОчиститьДисплейПокупателя(Знач ИДУстройства ) Экспорт

	Операция = "Очистить экран покупателя";
	
	Возврат Истина;
	
КонецФункции

Функция ВывестиQRКодНаДисплейПокупателя(Знач ЗначениеQRКода) Экспорт

	Операция = "Вывод QR на экран покупателя";
	
	Возврат Истина;
	
КонецФункции

Функция ПолучитьПараметрыДисплеяПокупателя(ПараметрыДисплеяПокупателя) Экспорт

	Операция = "Получение параметров экрана покупателя";
	
	Попытка
		ЭтотОбъект.ПолучитьМакет("ПараметрыЭкранаПокупателя").ПолучитьТекст();
	Исключение
		УстановитьОшибку(Операция,Строка(ОписаниеОшибки()),Истина);
		Возврат Ложь;
	КонецПопытки;

	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьОшибку(Знач Операция,Знач Описание="",Знач ЕстьОшибка=Ложь);
	
	Если НЕ ЗначениеЗаполнено(Описание) Тогда
		Описание = ?(ЕстьОшибка,"Ошибка при выполнение операции.","Операция успешно выполнена");
	КонецЕсли;
	Описание = Операция + ": " + Строка(Описание);
	
	ДанныеОшибки.Описание	= Описание;
	ДанныеОшибки.Код		= ?(ЕстьОшибка,-1,0);
	
КонецПроцедуры


#КонецОбласти

#Область Инициализация

	ДанныеОшибки = Новый Структура("Описание,Код","",0);

#КонецОбласти

#КонецЕсли
